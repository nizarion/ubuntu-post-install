#!/bin/bash

# oh-my-zsh install
function install_oh_my_zsh {
	if [ -d ~/.oh-my-zsh/ ] ; then
		echo ''
		echo "oh-my-zsh is already installed..."
		read -p "Would you like to update oh-my-zsh now?" -n 1 -r
		echo ''
		if [[ $REPLY =~ ^[Yy]$ ]] ; then
			cd ~/.oh-my-zsh && git pull
			if [[ $? -eq 0 ]]
				then
					echo "Update complete..." && cd
				else
					echo "Update not complete..." >&2 cd
			fi
		fi
	else
		echo "oh-my-zsh not found, now installing oh-my-zsh..."
		echo ''
		sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
	fi
	# oh-my-zsh plugin install
	echo ''
	echo "Now installing oh-my-zsh plugins..."
	echo ''
	install_from_list "zsh-completions" "https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions" main
	install_from_list "zsh-autosuggestions" "git://github.com/zsh-users/zsh-autosuggestions $HOME/.dotfiles/.zsh/zsh-autosuggestions" main
	install_from_list "zsh-syntax-highlighting" "https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.dotfiles/.zsh/zsh-syntax-highlighting" main
	

}
# install git-completion
function install_git_completion {
	echo ''
	echo "Now configuring git-completion..."
	GIT_VERSION=`git --version | awk '{print $3}'`
	URL="https://raw.github.com/git/git/v$GIT_VERSION/contrib/completion/git-completion.bash"
	echo ''
	echo "Downloading git-completion for git version: $GIT_VERSION..."
	if ! curl "$URL" --silent --output "$HOME/.git-completion.bash"; then
		echo "ERROR: Couldn't download completion script. Make sure you have a working internet connection." && exit 1
	fi
	
}

# Set default shell to zsh
function set_default_oh_my_zsh {
	echo ''
	read -p "Do you want to change your default shell? y/n" -n 1 -r
	echo ''
	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		echo "Now setting default shell..."
	    superuser_do "chsh -s $(which zsh)"
	    if [[ $? -eq 0 ]]
	    then
		echo "Successfully set your default shell to zsh..."
	    else
		echo "Default shell not set successfully..." >&2
	fi
	else 
	    echo "You chose not to set your default shell to zsh. Exiting now..."
	fi

}

# Set default shell to zsh
function clone_to_nonempty {
	# Clone just the repository's .git folder (excluding files as they are already in
	# `existing-dir`) into an empty temporary directory
	git clone --no-checkout https://github.com/nizarion/dotfiles.git ~/.dotfiles/existing-dir.tmp # might want --no-hardlinks for cloning local repo

	# Move the .git folder to the directory with the files.
	# This makes `existing-dir` a git repo.
	mv ~/.dotfiles/existing-dir.tmp/.git ~/.dotfiles/

	# Delete the temporary directory
	rm -rf ~/.dotfiles/existing-dir.tmp
	cd ~/.dotfiles

	# git thinks all files are deleted, this reverts the state of the repo to HEAD.
	# WARNING: any local changes to the files will be lost.
	git reset --hard HEAD
}

# Nizar Dotfiles
function install_dotfiles {
	
	# oh-my-zsh install
	install_oh_my_zsh
	# install git-completion
	install_git_completion
	# Pull down personal dotfiles
	echo ''
	read -p "Do you want to use Nizar's dotfiles? y/n" -n 1 -r
	echo    # (optional) move to a new line
	if [[ $REPLY =~ ^[Yy]$ ]]
	then
	    echo ''
		echo "Now pulling down the dotfiles..."
		# git clone https://github.com/nizarion/dotfiles.git ~/.dotfiles
		clone_to_nonempty
		echo ''
		cd $HOME/.dotfiles && echo "switched to .dotfiles dir..."
		echo ''
		echo "Checking out master branch..." && git checkout master
		echo ''
		echo "Now configuring symlinks..." 
		bootstrap_dotfiles 
	    if [[ $? -eq 0 ]]
	    then
		echo "Successfully configured your environment with the dotfiles..."
	    else
		echo "Dotfiles were not applied successfully..." >&2
	fi
	else 
		echo ''
	    echo "You chose not to apply github's dotfiles. You will need to configure your environment manually..."
		echo ''
		echo "Setting defaults for .zshrc and .bashrc..."
		echo ''
		echo "source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc && echo "added zsh-syntax-highlighting to .zshrc..."
		echo ''
		echo "source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc && echo "added zsh-autosuggestions to .zshrc..."
		echo ''
		echo "source $HOME/.git-completion.bash" >> ${ZDOTDIR:-$HOME}/.bashrc && echo "added git-completion to .bashrc..."
		
	fi
	
	set_default_oh_my_zsh


}
